<Application x:Class="Gestionnaire_fichier_config.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Gestionnaire_fichier_config"
             xmlns:VM="clr-namespace:Gestionnaire_fichier_config.ViewModels"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <VM:MainViewModel x:Key="MVM"/>
        <VM:Charged_Images_ViewModel x:Key="CIVM"/>
        
        <!-- ................Border Keys................ -->
        <SolidColorBrush x:Key="Window.Border.Color" Color="#569500"/>

        <!-- .......................................................... -->
        <!--                           BUTTON                           -->
        <!-- .......................................................... -->

        <!-- ................Button Keys................ -->
        <SolidColorBrush x:Key="ButtonBase.Background" Color="#569500"/>
        <SolidColorBrush x:Key="ButtonBase.Foreground" Color="White"/>
        <Color x:Key="Button.Effect.Color" R="0" G="0" B="0"/>

        <!-- ................ButtonBase................ -->
        <Style x:Key="ButtonBase" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Width" Value="300"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="Background" Value="{StaticResource ButtonBase.Background}"/>
            <Setter Property="Foreground" Value="{StaticResource ButtonBase.Foreground}"/>

        </Style>
        <!-- ................ShadowButton................ -->
        <Style x:Key="ShadowButton" BasedOn="{StaticResource ButtonBase}" TargetType="{x:Type Button}">
            <Setter Property="Button.Effect">
                <Setter.Value>
                    <DropShadowEffect Color="{StaticResource Button.Effect.Color}" Direction="320" ShadowDepth="2" BlurRadius="10" Opacity="0.25" />
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ................CloseButton................ -->
        <Style x:Key="CloseButton" BasedOn="{StaticResource ButtonBase}" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="0 -1 -1 -1"/>
            <Setter Property="Height" Value="31"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Roboto Bold"/>
        </Style>
        <!-- ................BigButton................ -->
        <Style x:Key="BigButton" BasedOn="{StaticResource ShadowButton}" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="250"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="FontSize" Value="20"/>
        </Style>
        <!-- ................SmallButton................ -->
        <Style x:Key="SmallButton" BasedOn="{StaticResource ShadowButton}" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="200"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>
        <!-- ................SmallerButton................ -->
        <Style x:Key="SmallerButton" BasedOn="{StaticResource ShadowButton}" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="120"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
        <!-- ................SmallerButton................ -->
        <Style x:Key="SmallestButton" BasedOn="{StaticResource ShadowButton}" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
        </Style>

        <!-- ................RoundedButton................ -->
        <ControlTemplate x:Key="RoundedButton" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#202020" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.100" />
                            </Storyboard>
                        </BeginStoryboard>

                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#569500" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.100" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#121212"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#121212"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#186DA027"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#186DA027"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- ................RectangleButton................ -->
        <ControlTemplate x:Key="RectangleButton" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#202020" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.100" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#569500" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.100" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- ........................................................... -->
        <!--                           TEXTBOX                           -->
        <!-- ........................................................... -->

        <!-- ................TextBoxBase................ -->
        <SolidColorBrush x:Key="TextBoxBase.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBoxBase.MouseOver.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBoxBase.Focus.Border" Color="#FFABAdB3"/>

        <Style x:Key="TextBoxBase" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBase.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Height" Value="30"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBoxBase.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBoxBase.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- ................BiggerTextBoxBase................ -->
        <Style x:Key="BiggerTextBoxBase" BasedOn="{StaticResource TextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Width" Value="400"/>
        </Style>
        <!-- ................BiggerTextBoxLeft................ -->
        <Style x:Key="BiggerTextBoxLeft" BasedOn="{StaticResource BiggerTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>
        <!-- ................BiggerTextBoxCenter................ -->
        <Style x:Key="BiggerTextBoxCenter" BasedOn="{StaticResource BiggerTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <!-- ................BiggerTextBoxRight................ -->
        <Style x:Key="BiggerTextBoxRight" BasedOn="{StaticResource BiggerTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>
        
        <!-- ................BigTextBoxBase................ -->
        <Style x:Key="BigTextBoxBase" BasedOn="{StaticResource TextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Width" Value="350"/>
        </Style>
        <!-- ................BigTextBoxLeft................ -->
        <Style x:Key="BigTextBoxLeft" BasedOn="{StaticResource BigTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>
        <!-- ................BigTextBoxCenter................ -->
        <Style x:Key="BigTextBoxCenter" BasedOn="{StaticResource BigTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <!-- ................BigTextBoxRight................ -->
        <Style x:Key="BigTextBoxRight" BasedOn="{StaticResource BigTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>

        <!-- ................MediumTextBoxBase................ -->
        <Style x:Key="MediumTextBoxBase" BasedOn="{StaticResource TextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="Width" Value="300"/>
        </Style>
        <!-- ................MediumTextBoxLeft................ -->
        <Style x:Key="MediumTextBoxLeft" BasedOn="{StaticResource MediumTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>
        <!-- ................MediumTextBoxCenter................ -->
        <Style x:Key="MediumTextBoxCenter" BasedOn="{StaticResource MediumTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <!-- ................MediumTextBoxRight................ -->
        <Style x:Key="MediumTextBoxRight" BasedOn="{StaticResource MediumTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>

        <!-- ................SmallTextBoxBase................ -->
        <Style x:Key="SmallTextBoxBase" BasedOn="{StaticResource TextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="Width" Value="200"/>
        </Style>
        <!-- ................SmallTextBoxLeft................ -->
        <Style x:Key="SmallTextBoxLeft" BasedOn="{StaticResource SmallTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>
        <!-- ................SmallTextBoxCenter................ -->
        <Style x:Key="SmallTextBoxCenter" BasedOn="{StaticResource SmallTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <!-- ................SmallTextBoxRight................ -->
        <Style x:Key="SmallTextBoxRight" BasedOn="{StaticResource SmallTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>

        <!-- ................SmallerTextBoxBase................ -->
        <Style x:Key="SmallerTextBoxBase" BasedOn="{StaticResource TextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="Width" Value="120"/>
        </Style>
        <!-- ................SmallerTextBoxLeft................ -->
        <Style x:Key="SmallerTextBoxLeft" BasedOn="{StaticResource SmallerTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>
        <!-- ................SmallerTextBoxCenter................ -->
        <Style x:Key="SmallerTextBoxCenter" BasedOn="{StaticResource SmallerTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <!-- ................SmallerTextBoxRight................ -->
        <Style x:Key="SmallerTextBoxRight" BasedOn="{StaticResource SmallerTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>

        <!-- ................SmallestTextBoxBase................ -->
        <Style x:Key="SmallestTextBoxBase" BasedOn="{StaticResource TextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="Width" Value="80"/>
        </Style>
        <!-- ................SmallestTextBoxLeft................ -->
        <Style x:Key="SmallestTextBoxLeft" BasedOn="{StaticResource SmallestTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>
        <!-- ................SmallestTextBoxCenter................ -->
        <Style x:Key="SmallestTextBoxCenter" BasedOn="{StaticResource SmallestTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <!-- ................SmallestTextBoxRight................ -->
        <Style x:Key="SmallestTextBoxRight" BasedOn="{StaticResource SmallestTextBoxBase}" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="0"/>
        </Style>

        <!-- .......................................................... -->
        <!--                          Slider                            -->
        <!-- .......................................................... -->

        <!-- ................SliderThumb Keys................ -->
        <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#00BDB580"/>
        <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#56752D"/>
        <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#56752D"/>
        <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#86b644"/>
        <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#56752D"/>
        <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#86b644"/>
        <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#86b644"/>
        <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#86b644"/>
        <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="White"/>

        <!-- ................SliderThumbHorizontalTop................ -->
        <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>

                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- ................SliderThumbHorizontalBottom................ -->
        <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- ................RepeatButtonTransparent................ -->
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ................SliderThumbHorizontalDefault................ -->
        <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- ................SliderHorizontal................ -->
        <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                    <Border x:Name="TrackBackground" CornerRadius="2" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="0" Background="{StaticResource SliderThumb.Track.Background}" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                        <Canvas Margin="-6,-1">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" VerticalAlignment="Center" Width="11"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- ................Sliders................ -->
        <Style x:Key="Sliders" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
            <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
            <Setter Property="TickPlacement" Value="Both"/>
            <Setter Property="IsSnapToTickEnabled" Value="True"/>
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- .......................................................... -->
        <!--                            GRID                            -->
        <!-- .......................................................... -->

        <!-- ................Grid Keys................ -->
        <SolidColorBrush x:Key="CloseGrid.Background" Color="#569500"/>
        <SolidColorBrush x:Key="Grid1.Background" Color="#282828"/>
        <SolidColorBrush x:Key="Grid2.Background" Color="#202020"/>
        <SolidColorBrush x:Key="Grid3.Background" Color="#171717"/>

        <!-- ................Grid1................ -->
        <Style x:Key="Grid1" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="#282828"/>
        </Style>
        <!-- ................Grid2................ -->
        <Style x:Key="Grid2" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="#202020"/>
            <Setter Property="Margin" Value="0"/>

        </Style>
        <!-- ................Grid3................ -->
        <Style x:Key="Grid3" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="#171717"/>
            <Setter Property="Margin" Value="0"/>
        </Style>
        <!-- ................CloseGrid................ -->
        <Style x:Key="CloseGrid" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="{StaticResource CloseGrid.Background}"/>
        </Style>

        <!-- .......................................................... -->
        <!--                          BORDER                            -->
        <!-- .......................................................... -->

        <!-- ................BorderGrid Keys................ -->
        <SolidColorBrush x:Key="BorderGrid1.BorderBrush.Color" Color="#252525"/>
        <SolidColorBrush x:Key="BorderGrid2.BorderBrush.Color" Color="#171717"/>
        <SolidColorBrush x:Key="BorderGrid3.BorderBrush.Color" Color="#141414"/>

        <!-- ................BorderGridBaseLeft................ -->
        <Style x:Key="BorderGridBaseLeft" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="2 0 0 0"/>
        </Style>
        <!-- ................BorderGridBaseRight................ -->
        <Style x:Key="BorderGridBaseRight" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="0 0 2 0"/>
        </Style>
        <!-- ................BorderGridBaseTop................ -->
        <Style x:Key="BorderGridBaseTop" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="0 2 0 0"/>
        </Style>
        <!-- ................BorderGridBaseRight................ -->
        <Style x:Key="BorderGridBaseBottom" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="0 0 0 2"/>
        </Style>

        <!-- ................BorderGrid1Left................ -->
        <Style x:Key="BorderGrid1Left" BasedOn="{StaticResource BorderGridBaseLeft}" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{StaticResource BorderGrid1.BorderBrush.Color}"/>
        </Style>
        <!-- ................BorderGrid2Left................ -->
        <Style x:Key="BorderGrid2Left" BasedOn="{StaticResource BorderGridBaseLeft}" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{StaticResource BorderGrid2.BorderBrush.Color}"/>
        </Style>
        <!-- ................BorderGrid3Left................ -->
        <Style x:Key="BorderGrid3Left" BasedOn="{StaticResource BorderGridBaseLeft}" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{StaticResource BorderGrid3.BorderBrush.Color}"/>
        </Style>

        <!-- ................BorderGrid1Right................ -->
        <Style x:Key="BorderGrid1Right" BasedOn="{StaticResource BorderGridBaseRight}" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{StaticResource BorderGrid1.BorderBrush.Color}"/>
        </Style>
        <!-- ................BorderGrid2Right................ -->
        <Style x:Key="BorderGrid2Right" BasedOn="{StaticResource BorderGridBaseRight}" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{StaticResource BorderGrid2.BorderBrush.Color}"/>
        </Style>
        <!-- ................BorderGrid3Right................ -->
        <Style x:Key="BorderGrid3Right" BasedOn="{StaticResource BorderGridBaseRight}" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{StaticResource BorderGrid3.BorderBrush.Color}"/>
        </Style>

        <!-- ................BorderGrid1Top................ -->
        <Style x:Key="BorderGrid1Top" BasedOn="{StaticResource BorderGridBaseTop}" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{StaticResource BorderGrid1.BorderBrush.Color}"/>
        </Style>
        <!-- ................BorderGrid2Top................ -->
        <Style x:Key="BorderGrid2Top" BasedOn="{StaticResource BorderGridBaseTop}" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{StaticResource BorderGrid2.BorderBrush.Color}"/>
        </Style>
        <!-- ................BorderGrid3Top................ -->
        <Style x:Key="BorderGrid3Top" BasedOn="{StaticResource BorderGridBaseTop}" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{StaticResource BorderGrid3.BorderBrush.Color}"/>
        </Style>

        <!-- ................BorderGrid1Bottom................ -->
        <Style x:Key="BorderGrid1Bottom" BasedOn="{StaticResource BorderGridBaseBottom}" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{StaticResource BorderGrid1.BorderBrush.Color}"/>
        </Style>
        <!-- ................BorderGrid2Bottom................ -->
        <Style x:Key="BorderGrid2Bottom" BasedOn="{StaticResource BorderGridBaseBottom}" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{StaticResource BorderGrid2.BorderBrush.Color}"/>
        </Style>
        <!-- ................BorderGrid3Bottom................ -->
        <Style x:Key="BorderGrid3Bottom" BasedOn="{StaticResource BorderGridBaseBottom}" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{StaticResource BorderGrid3.BorderBrush.Color}"/>
        </Style>
        <!-- .......................................................... -->
        <!--                           LABEL                            -->
        <!-- .......................................................... -->

        <!-- ................Label Keys................ -->
        <SolidColorBrush x:Key="Label.Foreground" Color="White"/>

        <!-- ................LabelBase................ -->
        <Style x:Key="LabelBase" TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource Label.Foreground}"/>
            <Setter Property="FontFamily" Value="Roboto Light"/>
            <Setter Property="FontSize" Value="35"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- ................Label1Base................ -->
        <Style x:Key="Label1Base" BasedOn="{StaticResource LabelBase}" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="25"/>
        </Style>
        <!-- ................Label1Left................ -->
        <Style x:Key="Label1Left" BasedOn="{StaticResource Label1Base}" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>
        <!-- ................Label1Center................ -->
        <Style x:Key="Label1Center" BasedOn="{StaticResource Label1Base}" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <!-- ................Label1Right................ -->
        <Style x:Key="Label1Right" BasedOn="{StaticResource Label1Base}" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>

        <!-- ................Label2Base................ -->
        <Style x:Key="Label2Base" BasedOn="{StaticResource LabelBase}" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="20"/>
        </Style>
        <!-- ................Label2Left................ -->
        <Style x:Key="Label2Left" BasedOn="{StaticResource Label2Base}" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>
        <!-- ................Label2Center................ -->
        <Style x:Key="Label2Center" BasedOn="{StaticResource Label2Base}" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <!-- ................Label2Right................ -->
        <Style x:Key="Label2Right" BasedOn="{StaticResource Label2Base}" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>

        <!-- ................Label3Base................ -->
        <Style x:Key="Label3Base" BasedOn="{StaticResource LabelBase}" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="15"/>
        </Style>
        <!-- ................Label3Left................ -->
        <Style x:Key="Label3Left" BasedOn="{StaticResource Label3Base}" TargetType="{x:Type Label}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <!-- ................Label3Center................ -->
        <Style x:Key="Label3Center" BasedOn="{StaticResource Label3Base}" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <!-- ................Label3Right................ -->
        <Style x:Key="Label3Right" BasedOn="{StaticResource Label3Base}" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>

        <!-- ................Label4Base................ -->
        <Style x:Key="Label4Base" BasedOn="{StaticResource LabelBase}" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <!-- ................Label4Left................ -->
        <Style x:Key="Label4Left" BasedOn="{StaticResource Label4Base}" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>
        <!-- ................Label4Center................ -->
        <Style x:Key="Label4Center" BasedOn="{StaticResource Label4Base}" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <!-- ................Label4Right................ -->
        <Style x:Key="Label4Right" BasedOn="{StaticResource Label4Base}" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>

        <!-- .......................................................... -->
        <!--                           WINDOW                           -->
        <!-- .......................................................... -->

        <!-- ................WindowBase................ -->
        <Style x:Key="WindowBase" TargetType="{x:Type Window}">
            <Setter Property="BorderBrush" Value="{StaticResource Window.Border.Color}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontFamily" Value="Roboto"/>
        </Style>

        <!-- ................WindowBase1................ -->
        <Style x:Key="WindowBase1" BasedOn="{StaticResource WindowBase}" TargetType="{x:Type Window}">
            <Setter Property="Background" Value="#282828"/>
        </Style>
        <!-- ................WindowBase2................ -->
        <Style x:Key="WindowBase2" BasedOn="{StaticResource WindowBase}" TargetType="{x:Type Window}">
            <Setter Property="Background" Value="#202020"/>
        </Style>
        <!-- ................WindowBase3................ -->
        <Style x:Key="WindowBase3" BasedOn="{StaticResource WindowBase}" TargetType="{x:Type Window}">
            <Setter Property="Background" Value="#171717"/>
        </Style>

        <!-- .......................................................... -->
        <!--                         TEXTBLOCK                          -->
        <!-- .......................................................... -->

        <!-- ................Listbox Keys................ -->
        <SolidColorBrush x:Key="ScrollbarThumb.Background" Color="#569500"/>

        <!-- ................TextBlockTop................ -->

        <Style x:Key="TextBlockTop" TargetType="{x:Type TextBlock}">

            <Setter Property="Foreground" Value="#b3b3b3"/>
            <Setter Property="TextAlignment" Value="Right"/>

        </Style>

        <!-- ................TextBlockMiddle................ -->
        <Style x:Key="TextBlockMiddle" TargetType="{x:Type TextBlock}">

            <Setter Property="Background" Value="#1f1f1f"/>
            <Setter Property="TextAlignment" Value="Center"/>

        </Style>
        
        <!-- ........................................................... -->
        <!--                           LISTBOX                           -->
        <!-- ........................................................... -->
        
        <!-- ................ListBox................ -->
        <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">

            <Setter Property="Background" Value="#282828"/>
            <Setter Property="Foreground" Value="#b3b3b3"/>
            <Setter Property="Margin" Value="10 0"/>
            <Setter Property="BorderThickness" Value="0"/>
            
        </Style>

        <!-- ................ListBoxItem................ -->
        <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
            
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Border" CornerRadius="2" Padding="5" SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#161616"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#1f1f1f"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>

        <!-- ................Scrollbar Thumb................ -->
        <Style x:Key="{x:Type Thumb}" TargetType="{x:Type Thumb}">
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="Rectangle1" CornerRadius="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>

        <!-- ................Scrollbar................ -->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="{StaticResource ScrollbarThumb.Background}" />
            <Setter Property="Background" Value="#1f1f1f" />
            <Setter Property="Width" Value="8" />
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        
                        <Grid x:Name="GridRoot" Width="16" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        
                        <ControlTemplate.Triggers>
                            
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                            
                        </ControlTemplate.Triggers>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
